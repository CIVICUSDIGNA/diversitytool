{"version":3,"sources":["store/categories/types.ts","store/categories/reducer.ts","store/languages/types.ts","store/categories/selectors.ts","store/languages/reducer.ts","store/statements/types.ts","store/languages/actions.ts","store/languages/selectors.ts","store/statements/reducer.ts","store/results/types.ts","store/statements/selectors.ts","store/results/reducer.ts","store/goals/types.ts","store/results/actions.ts","store/results/selectors.ts","store/goals/reducer.ts","store/goals/selectors.ts","store/index.ts","i18n/index.ts","i18n/en.ts","i18n/hr.ts","hooks/useToggle.ts","images/logo.svg","images/arrow-right.svg","images/arrow-left-white.svg","images/close.svg","images/menu.svg","images/globe.svg","images/cc.svg","images/civicus.svg","images/github.svg","images/goalCard.svg","images/filtersOpen.svg","images/filtersClose.svg","images/infoLight.svg","images/infoDark.svg","images/goalLight.svg","images/goalActive.svg","images/star.svg","pages/WelcomePage/WelcomeCard.tsx","pages/WelcomePage/WelcomePage.tsx","components/Categories/Category.tsx","components/Categories/Categories.tsx","components/Goals/GoalButtonToggle.tsx","store/goals/actions.ts","components/Goals/GoalButton.tsx","components/Categories/CategoryAnswered.tsx","utils/colors.ts","components/Categories/Filters.tsx","components/SaveModal/SaveModal.tsx","pages/CategoryPage/CategoryPage.tsx","components/Statements/Statement.tsx","pages/CategoryResultPage/CategoryResultPage.tsx","components/Statements/Progress.tsx","pages/StatementPage/StatementPage.tsx","pages/NotFound/NotFound.tsx","pages/AboutPage/AboutPage.tsx","pages/ResourcesPage/ResourcesPage.tsx","components/LanguageDropdown/LanguageDropdown.tsx","components/Footer/Footer.tsx","components/ResetModal/ResetModal.tsx","components/Navigation/Navigation.tsx","MainLayout.tsx","App.tsx","store/categories/actions.ts","store/statements/actions.ts","index.tsx"],"names":["CategoryActions","LanguageActions","getCategories","state","categories","getCategoryById","id","find","c","StatementActions","Answer","initialState","languages","selectedLanguage","description","setSelectedLanguage","payload","type","SET_SELECTED_LANGUAGE","getLanguages","getSelectedLanguage","ResultActions","allStatements","activeStatement","getStatements","statements","getMaturityStages","maturityLevels","map","ml","getStatementsByCategory","categoryId","filter","s","category","getStatementsUnaswered","filteredStatements","_","differenceWith","results","allResults","first","second","statementId","getStatementsAnswered","statement","res","length","GoalActions","goals","loadGoals","LOAD_GOALS","getResults","getResultsByCategory","r","getGoals","settingGoalsActive","getGoalActive","goal","rootReducer","combineReducers","action","SET_CATEGORIES","SET_LANGUAGES","SET_STATEMENTS","i","SET_RESULT","result","LOAD_RESULTS","SET_GOAL","goalToAdd","REMOVE_GOAL","goalToRemove","newGoals","forEach","g","maturityStage","push","RESET","SET_GOAL_ACTIVE","newValue","persistConfig","key","storage","stateReconciler","autoMergeLevel2","whitelist","pReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","translations","en","welcomeTitle","welcomeDescription","welcomeStartSelfAssessment","welcomeOr","welcomePickUpWhereYouLeft","welcomeEnterCode","welcomeContinue","welcomeStartNewSelfAssessment","categoriesPleaseChoose","categoriesChooseNext","categoriesDescriptionFirst","categoriesDescriptionSecond","categoriesStateOfDiversity","categoriesSave","categoryInProgress","categorySetAsGoal","categoryRemoveGoal","categoryAnswered","categoryBack","categoryClickOnMaturityLevel","notFound","statementPageBack","statementShowResults","aboutSelfDiagnosticTool","aboutParagraphOne","aboutParagraphTwo","aboutWhatHappensNext","aboutParagraphThree","aboutParagraphFour","aboutParagraphFive","aboutAcknowledgments","aboutCreativeConsultancyTeams","aboutSensemakingLab","aboutCIVICUSSupportTeam","aboutDIGNAAdvisoryGroupMembers","aboutSpecialThanks","aboutSpecialAppreciation","filtersShowFiltersByArea","filtersRemoveFiltersByArea","goalButtonSetGoalPerCategory","goalButtonFinishSettingGoal","saveModalSaveYourProgress","saveModalCopyThisCode","saveModalCode","saveModalCopied","saveModalDone","navigationAbout","navigationResources","navigationLanguages","navigationRestartAssessment","statementsProgress","statementsRequired","statementsAssessment","statementsHowMuchDoesThis","statementsNotAtAll","statementsSomewhat","statementsVeryMuch","statementsDoesNotApply","resetModalRestartAssessment","resetModalTitle","resetModalSubtitle","resetModalCancel","resetModalConfirm","hr","categoriesDescription","useTranslations","formatMessage","useIntl","t","useToggle","initialValue","React","useState","value","setValue","toggle","useCallback","event","v","WelcomeCard","history","useHistory","dispatch","useDispatch","welcomeContentOpen","toggleWelcomeContent","code","setCode","handleDeserialization","a","decompress","trim","jsonString","json","JSON","parse","alert","className","style","whiteSpace","onClick","htmlFor","placeholder","onChange","e","target","src","ArrowRightIcon","alt","WelcomePage","useSelector","to","Category","title","status","Categories","showOnlyUnanswered","cat","categoryResults","categoryStatements","categoryData","name","isEmpty","GoalButtonToggle","goalButtonActive","activeClass","undefined","GoalActiveIcon","GoalLightIcon","GoalButton","tooltip","InfoLightIcon","InfoDarkIcon","CategoryAnswered","onCardClicked","noop","filteredTags","isFilterable","maturityStages","answeredStatements","unansweredStatements","resultsCategory","language","settingsGoalActive","setFilter","mStage","c0","c1","f","maturityAnswered","intersection","tags","ma","maturity_stage","maturityUnanswered","mu","totalResults","doNotApply","tr","answerId","DoesntApply","sumResults","reduce","acc","cur","gradient","color","match","oct","parseInt","Math","min","round","toString","padStart","isGoalSet","isGoalSetOnCategory","classNames","backgroundColor","clickedCategory","GoalCardIcon","Filters","selectedTags","setSelectedTags","filtersOpen","toggleFilters","statementTags","uniq","availableTags","allTags","tag","tt","FiltersCloseIcon","FiltersOpenIcon","indexOf","newTags","toggleTag","SaveModal","open","setOpen","copied","clipboard","setClipboard","useEffect","stringify","compress","base64","generateCode","text","onCopy","prevState","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x","y","rx","ry","memo","Categorypage","showResults","modalVisbility","toggleModal","useMemo","StarIcon","position","top","noResults","allAnswered","StatementCmp","answered","handleAnswer","answerType","active","NotAtAll","disabled","Somewhat","VeryMuch","index","CategoryResultPage","useParams","setMaturityStage","resultsVisible","setResultsVisible","selectedMaturityStageName","filteredAnsweredStatements","filteredUnasweredStatements","ArrowLeftWhiteIcon","selectedMaturityStage","Statement","Progress","progressCurrent","progressRequired","progressTotal","percentage","requiredPercentage","clipPath","left","x1","y1","x2","y2","strokeDasharray","StatementPage","randomStatement","mandatoryStatements","mandatory","sample","getRandomStatement","NotFound","AboutPage","dangerouslySetInnerHTML","__html","ResourcesPage","types","printCategories","ctResources","resources","ctr","publication","author","year","href","url","renderCategoryType","LanguageDropdown","showMenu","setShowMenu","hidden","data-toggle","GlobeIcon","show","lang","ev","preventDefault","Footer","CreativeCommonsIcon","CivicusIcon","GitHubIcon","ResetModal","Navigation","mobileMenuOpen","toggleMobileMenu","handleRestart","document","body","classList","add","remove","MenuIcon","CloseIcon","Logo","MainLayout","children","App","setLanguages","setStatements","locale","messages","path","exact","component","CategoryPage","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.3bb00d4d.chunk.js","sourcesContent":["export type Category = CategoryLanguage & {\n  id: string;\n};\n\nexport interface CategoryData {\n  name: string;\n  description: string;\n}\n\nexport interface CategoryLanguage {\n  [language: string]: CategoryData;\n}\n\n// REDUX TYPES\nexport type CategoryState = Category[];\n\nexport enum CategoryActions {\n  SET_CATEGORIES = 'categories/set_categories',\n}\n","import { CategoryActions, CategoryState } from './types';\n\nexport const categoryReducer = (\n  state: CategoryState = [],\n  action: {\n    type: CategoryActions;\n    payload: CategoryState;\n  }\n): CategoryState => {\n  switch (action.type) {\n    case CategoryActions.SET_CATEGORIES:\n      return action.payload;\n  }\n  return state;\n};\n","export type Language = {\n  id: string;\n  description: string;\n};\n\n// REDUX TYPES\nexport type LanguageState = {\n  languages: Language[];\n  selectedLanguage: Language;\n};\n\nexport enum LanguageActions {\n  SET_LANGUAGES = 'language/set_languages',\n  SET_SELECTED_LANGUAGE = 'language/set_selected_language',\n}\n","import { RootState } from 'store';\n\nexport const getCategories = (state: RootState) => state.categories;\n\nexport const getCategoryById = (id: string) => (state: RootState) =>\n  state.categories.find((c) => c.id === id);\n","import { LanguageActions, LanguageState } from './types';\n\nconst initialState: LanguageState = {\n  languages: [],\n  selectedLanguage: {\n    id: 'en',\n    description: 'english',\n  },\n};\n\nexport const languageReducer = (\n  state: LanguageState = initialState,\n  action: {\n    type: LanguageActions;\n    payload: any;\n  }\n): LanguageState => {\n  switch (action.type) {\n    case LanguageActions.SET_LANGUAGES:\n      return {\n        ...state,\n        languages: action.payload,\n      };\n    case LanguageActions.SET_SELECTED_LANGUAGE:\n      return {\n        ...state,\n        selectedLanguage: action.payload,\n      };\n  }\n  return state;\n};\n","export interface Statement {\n  category: string;\n  maturity_stage: string;\n  tags: string[];\n  statement: StatementLanguage;\n  statementId: number;\n  mandatory?: boolean;\n}\n\nexport interface StatementLanguage {\n  [language: string]: string;\n}\n\n// REDUX TYPES\nexport type StatementState = {\n  allStatements: Statement[];\n};\n\nexport enum StatementActions {\n  SET_STATEMENTS = 'statements/set_statements',\n}\n\nexport enum Answer {\n  NotAtAll = 1,\n  Somewhat = 2,\n  VeryMuch = 3,\n  DoesntApply = 4,\n}\n","import { Language, LanguageActions } from './types';\n\nexport const setLanguages = (payload: Language[]) => ({\n  type: LanguageActions.SET_LANGUAGES,\n  payload,\n});\n\nexport const setSelectedLanguage = (payload: Language) => ({\n  type: LanguageActions.SET_SELECTED_LANGUAGE,\n  payload,\n});\n","import { RootState } from 'store';\n\nexport const getLanguages = (state: RootState) => state.languages.languages;\n\nexport const getSelectedLanguage = (state: RootState) =>\n  state.languages.selectedLanguage;\n","import { Statement, StatementActions, StatementState } from './types';\n\nconst initialState = {\n  allStatements: [],\n  activeStatement: null,\n};\n\nexport const statementReducer = (\n  state: StatementState = initialState,\n  action: {\n    type: StatementActions;\n    payload: any;\n  }\n): StatementState => {\n  switch (action.type) {\n    case StatementActions.SET_STATEMENTS:\n      const statements: Statement[] = action.payload.map(\n        (s: Statement, i: number) => ({ ...s, statementId: i })\n      );\n      return {\n        ...state,\n        allStatements: statements,\n      };\n  }\n  return state;\n};\n","import { Answer } from 'store/statements';\n\nexport interface Result {\n  statementId: number;\n  answerId: Answer;\n  category: string;\n}\n\nexport interface Goal {\n  categoryId: string;\n  maturityStage: string;\n}\n\n// REDUX TYPES\nexport type ResultState = {\n  allResults: Result[];\n  goals: Goal[];\n};\n\nexport enum ResultActions {\n  SET_RESULT = 'results/set_result',\n  LOAD_RESULTS = 'results/load_results',\n  LOAD_GOALS = 'results/load_goals',\n  SET_GOAL = 'results/set_goal',\n  REMOVE_GOAL = 'results/remove_goal',\n  RESET = 'results/reset',\n}\n","import { maturityLevels } from 'data';\nimport _ from 'lodash';\n\nimport { RootState } from 'store';\n\nimport { Statement } from './types';\n\nexport const getStatements = (state: RootState) =>\n  state.statements.allStatements;\n\nexport const getMaturityStages = (state: RootState): string[] =>\n  maturityLevels.map((ml: any) => ml.id);\n\nexport const getStatementsByCategory = (categoryId: string) => (\n  state: RootState\n) => {\n  return state.statements.allStatements.filter(\n    (s) => s.category === categoryId\n  );\n};\n\nexport const getStatementsUnaswered = (categoryId: string) => (\n  state: RootState\n) => {\n  const filteredStatements = getStatementsByCategory(categoryId)(state);\n  const unansweredStatements = _.differenceWith(\n    filteredStatements,\n    state.results.allResults,\n    (first, second) => first.statementId === second.statementId\n  );\n  return unansweredStatements;\n};\n\nexport const getStatementsAnswered = (categoryId: string) => (\n  state: RootState\n) => {\n  const filteredStatements = getStatementsByCategory(categoryId)(state);\n  const answeredStatements = filteredStatements.filter(\n    (statement) =>\n      state.results.allResults.filter(\n        (res) => res.statementId === statement.statementId\n      ).length > 0\n  );\n\n  return answeredStatements;\n};\n\nexport const getRandomStatement = (categoryId: string) => (\n  state: RootState\n) => {\n  const statements = getStatementsUnaswered(categoryId)(state);\n  const mandatoryStatements = statements.filter((s) => s.mandatory);\n\n  if (mandatoryStatements.length > 0) {\n    return _.sample<Statement>(mandatoryStatements);\n  }\n\n  return _.sample<Statement>(statements);\n};\n","import { Goal, Result, ResultActions, ResultState } from './types';\n\nconst initialState: ResultState = {\n  allResults: [],\n  goals: [],\n};\n\nexport const resultReducer = (\n  state: ResultState = initialState,\n  action: {\n    type: ResultActions;\n    payload: any;\n  }\n): ResultState => {\n  switch (action.type) {\n    case ResultActions.SET_RESULT:\n      const result = action.payload as Result;\n      return { ...state, allResults: [...state.allResults, result] };\n    case ResultActions.LOAD_RESULTS:\n      return { ...state, allResults: action.payload };\n    case ResultActions.LOAD_GOALS:\n      return { ...state, goals: action.payload };\n    case ResultActions.SET_GOAL:\n      const goalToAdd = action.payload as Goal;\n      return { ...state, goals: [...state.goals, goalToAdd] };\n    case ResultActions.REMOVE_GOAL:\n      const goalToRemove = action.payload as Goal;\n      const newGoals: Goal[] = [];\n      state.goals.forEach((g) => {\n        if (\n          g.categoryId === goalToRemove.categoryId &&\n          g.maturityStage === goalToRemove.maturityStage\n        ) {\n          return;\n        }\n        newGoals.push(g);\n      });\n      return { ...state, goals: newGoals };\n    case ResultActions.RESET:\n      return initialState;\n  }\n  return state;\n};\n","// REDUX TYPES\nexport type GoalState = {\n  settingGoalsActive: boolean;\n};\n\nexport enum GoalActions {\n  SET_GOAL_ACTIVE = 'goal/set_goal_active',\n}\n","import { Result, ResultActions } from './types';\n\nexport const setResult = (payload: Result) => ({\n  type: ResultActions.SET_RESULT,\n  payload,\n});\n\nexport const loadResults = (payload: Result) => ({\n  type: ResultActions.LOAD_RESULTS,\n  payload,\n});\n\nexport const loadGoals = (payload: Result) => ({\n  type: ResultActions.LOAD_GOALS,\n  payload,\n});\n\nexport const setGoal = (maturityStage: string, categoryId: string) => ({\n  type: ResultActions.SET_GOAL,\n  payload: { maturityStage, categoryId },\n});\n\nexport const removeGoal = (maturityStage: string, categoryId: string) => ({\n  type: ResultActions.REMOVE_GOAL,\n  payload: { maturityStage, categoryId },\n});\n\nexport const reset = () => ({\n  type: ResultActions.RESET,\n});\n","import { RootState } from 'store';\n\nexport const getResults = (state: RootState) => {\n  return state.results.allResults;\n};\n\nexport const getResultsByCategory = (categoryId: string) => (\n  state: RootState\n) => {\n  return getResults(state).filter((r) => r.category === categoryId);\n};\n\nexport const getGoals = (state: RootState) => {\n  return state.results.goals;\n};\n","import { GoalActions, GoalState } from './types';\n\nconst initialState = {\n  settingGoalsActive: false,\n};\n\nexport const goalReducer = (\n  state: GoalState = initialState,\n  action: {\n    type: GoalActions;\n    payload: any;\n  }\n): GoalState => {\n  switch (action.type) {\n    case GoalActions.SET_GOAL_ACTIVE:\n      const newValue = action.payload as boolean;\n      return {\n        ...state,\n        settingGoalsActive: newValue,\n      };\n  }\n  return state;\n};\n","import { RootState } from 'store';\n\nexport const getGoalActive = (state: RootState) => {\n  return state.goal.settingGoalsActive;\n};\n","import { createStore, combineReducers, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nimport { categoryReducer, CategoryState } from './categories';\nimport { languageReducer, LanguageState } from './languages';\nimport { statementReducer, StatementState } from './statements';\nimport { resultReducer, ResultState } from './results';\nimport { goalReducer, GoalState } from './goals';\n\nexport interface RootState {\n  categories: CategoryState;\n  languages: LanguageState;\n  statements: StatementState;\n  results: ResultState;\n  goal: GoalState;\n}\n\nexport const rootReducer = combineReducers<RootState>({\n  categories: categoryReducer,\n  languages: languageReducer,\n  statements: statementReducer,\n  results: resultReducer,\n  goal: goalReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n  whitelist: ['results'],\n};\n\nconst pReducer = persistReducer<RootState>(persistConfig, rootReducer);\n\nexport const store: Store<RootState> = createStore(\n  pReducer,\n  composeWithDevTools()\n);\n\nexport const persistor = persistStore(store);\n","import { useIntl } from 'react-intl';\n\nimport { en } from './en';\nimport { hr } from './hr';\n\nexport const translations = { en, hr };\n\nexport const languages = [\n  { code: 'en', name: 'English' },\n  { code: 'hr', name: 'Croatian' },\n];\n\nexport const useTranslations = () => {\n  const { formatMessage } = useIntl();\n  const t = (id: string) => formatMessage({ id });\n\n  return { t, formatMessage };\n};\n","export const en = {\n  welcomeTitle: 'Self-assessment tool on Diversity & Inclusion',\n  welcomeDescription:\n    'This tool assists civil society organisations and movements in their journey to become more inclusive, diverse and sensitive to the needs, identities and backgrounds of their people. We believe in peoples\\' best intentions to reflect on themselves, their culture and practices, engaging in difficult dialogues when necessary. \\n\\nInteracting with this tool is not a panacea for solving discrimination, racism or workplace harassment. Rather, it provides a snapshot of where your organisation lies on the maturity model spectrum, with suggestions on how to grow in areas that need attention. It is not a rating or certification platform: we believe there is no \"stamp of achievement\" that an organisation can claim for \"sufficient diversity.\"\\n\\nWe hope that this tool will support civil society organisations in becoming inspiring role-models and champions of diversity & inclusion in their communities, helping in the process our common mission of building a better, fairer, more socially just and kind world.',\n  welcomeStartSelfAssessment: 'Start Self-Assessment',\n  welcomeOr: 'or',\n  welcomePickUpWhereYouLeft: 'Pick up where you left off.',\n  welcomeEnterCode: 'Enter code',\n  welcomeContinue: 'Continue',\n  welcomeStartNewSelfAssessment: 'Start a New Self-Assessment',\n\n  categoriesPleaseChoose: 'Please choose a category to start',\n  categoriesChooseNext: 'Choose next category',\n  categoriesDescriptionFirst:\n    'Here’s a bit more about why and how to choose the categories. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.',\n  categoriesDescriptionSecond:\n    'Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.',\n  categoriesStateOfDiversity: 'State of Our Diversity',\n  categoriesSave: 'Save',\n\n  categoryInProgress: 'In progress',\n  categorySetAsGoal: 'Set as goal',\n  categoryRemoveGoal: 'Remove goal',\n  categoryAnswered: 'answered',\n  categoryBack: 'Back',\n  categoryClickOnMaturityLevel:\n    'Click on a maturity level to see finished and unanswered statements',\n\n  notFound: 'Not Found',\n\n  statementPageBack: 'Back',\n  statementShowResults: 'Show results',\n\n  aboutSelfDiagnosticTool: 'About the Self-Diagnostic Tool',\n  aboutParagraphOne:\n    'There has been very little literature and case studies on the unique set up of civil society organisations to use as practical examples for the sector. Over the past year, <strong>CIVICUS tested the implementation of diverse and inclusive practices,and its impact on overall organisational health, through a one year pilot programme with different civil society actors</strong>. 8 CIVICUS members were selected from 400 applications with regional and contextual diversity. Once the pilot programme participants were selected CIVICUS matched each organization with an external consultant to undergo a diversity and inclusion audit. The audit was designed to be a stock taking exercise: looking what the organisation already has in terms of inclusive policies and practices and what glaring gaps need to be addressed. Each organisation received a comprehensive report identifying they were already doing well and recommendations on what they can improve with suggestions on how they can approach the gaps.',\n  aboutParagraphTwo:\n    '<strong>This report ended up being a huge driver of change for the organisations as many leadership teams had no idea that some of these problems existed.</strong> Even if they were somewhat aware of the issues, there was little awareness of how it was affecting their employees’ well being and ability to do their job safely. After one year each organisation had taken great strides in implementing short term wins and long term structures. Many staff were able to see changes and co-created the desired change. We hope with this tool, you will be able to find your D&amp;I driver of change and become inspired for positive change!',\n  aboutWhatHappensNext: 'What happens next?',\n  aboutParagraphThree:\n    'Now that you have received your self-assessment results, it is time for a reminder: the process of developing, enhancing or consolidating your commitment to D&amp;I standards and principles is one that requires long-term commitment, and regular, recurrent self-examination and self-reflection.',\n  aboutParagraphFour:\n    'If you are surprised with the results - perhaps it would be an interesting and useful exercise to ask a colleague to fill out the self-assessment tool, so that you can cross-reference and compare your respective results, identifying in the process the causes behind eventual discrepancies. If you are pleased with the results, it might be an excellent opportunity to see in what ways some of your current practices could be further codified, standardized and institutionalized across policies and organisational key processes and practices. If you are disheartened - worry not. By the mere act of engaging in this self-assessment, you have already embarked on the journey of advocating for D&amp;I within your organisation - and perhaps sharing the results with colleagues is a good start in finding ways to address some of the issues you have identified.',\n  aboutParagraphFive:\n    'Wherever on the maturity model you find yourself at this point - we hope that you will continue working on improving D&amp;I standards within your organisation, holding yourself and colleagues accountable to these standards and values. Thank you for filling out the self-assessment tool, and for allowing us to assist you in your D&amp;I efforts.',\n  aboutAcknowledgments: 'Acknowledgments',\n  aboutCreativeConsultancyTeams:\n    '<strong>Creative Consultancy Teams: </strong> Europe &amp; Southeast: Mario Mažić, Maja Nenadovic, Tin Geber',\n  aboutSensemakingLab:\n    '<strong>Sensemaking Lab: </strong> Jayati Doshi and Ovee Karwa',\n  aboutCIVICUSSupportTeam:\n    '<strong>CIVICUS Support Team:</strong> Suhani Bhushan, Oriana Castillo, Emaan Ali',\n  aboutDIGNAAdvisoryGroupMembers:\n    '<strong>DIGNA Advisory Group Members:</strong> Juliana Catania (Argentina), Karen Phillip (Barbados), Dumiso Gatsha (Botswana), Ana Addobbati (Brazil), Camila Silva (Brazil), Carey Rutherford (Canada), Karin Watson (Chile), Islam El-Ghazouly (Egypt), Kalisito Biaukula (Fiji), Abdul Mufeez Shaheed (Fiji), Vandita Morarka (India), Chepkwemoi Kimtai (Kenya), Saro Imra (Pakistan), Justin Francis Bionat (Philippines), Belen Giaquinta (Argentina/UK), Lily Rosengard (UK), Maggie Musonda (Zambia), Bhekumusa Moyo (Zambia)',\n  aboutSpecialThanks:\n    'Special thanks to: Thapelo Masiwa, Kgalalelo Gaebee, Silvia Puerto Aboy, Elisa Novoa, Hannah Wheatley, Anna Avagyan, Pam Gounder, Jack Cornforth, Merle Rutz, Amy Taylor, Deborah Walter, Jonathan Diab',\n  aboutSpecialAppreciation:\n    'We also wish to extend special appreciation to <a href=\"https://lindaraftree.com/\">Linda Raftree</a>, whose work on the <a href=\"https://lindaraftree.com/2019/10/17/a-responsible-data-maturity-model-for-non-profits/\">Responsible Data Maturity Model</a> guided our reasoning both in structure and in intent.',\n\n  filtersShowFiltersByArea: 'Show Filters by Area',\n  filtersRemoveFiltersByArea: 'Remove Filters by Area',\n  goalButtonSetGoalPerCategory: 'Set goal per category',\n  goalButtonFinishSettingGoal: 'Finish setting goals',\n\n  saveModalSaveYourProgress: 'Save Your Progress',\n  saveModalCopyThisCode:\n    'Copy this code and save it somewhere safe. You can come back to your score and continue working on it.',\n  saveModalCode: 'Code',\n  saveModalCopied: 'Copied.',\n  saveModalDone: 'Done',\n\n  navigationAbout: 'About',\n  navigationResources: 'Resources',\n  navigationLanguages: 'Languages',\n  navigationRestartAssessment: 'Restart Assessment',\n\n  statementsProgress: 'Progress:',\n  statementsRequired: 'Required:',\n  statementsAssessment:\n    'Assessment is more precise with every question you answer.',\n  statementsHowMuchDoesThis: 'How much does this statement resonate?',\n  statementsNotAtAll: 'Not at all',\n  statementsSomewhat: 'Somewhat',\n  statementsVeryMuch: 'Very much',\n  statementsDoesNotApply: ' Doesn’t apply',\n\n  resetModalRestartAssessment: 'Restart Assessment',\n  resetModalTitle:\n    'Are you sure you want to delete your progress and restart assesment?',\n  resetModalSubtitle:\n    'If you think current progress might be useful, consider saving it before restarting the assessment.',\n  resetModalCancel: 'No, take me back',\n  resetModalConfirm: 'Yes, delete my current progress.',\n};\n","export const hr = {\n  welcomeTitle: 'Dobrodošli u DIGNA-u.',\n  welcomeDescription:\n    'HR Text about the tool, what it does for you and how you can use it. With links to the about page, tutorial, FAQ etc.\\n\\nSed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum.',\n  welcomeStartSelfAssessment: 'Započnite Self-Assessment',\n  welcomeOr: 'ili',\n  welcomePickUpWhereYouLeft: 'Nastavite gdje ste stali.',\n  welcomeEnterCode: 'Unesite kod',\n  welcomeContinue: 'Nastavak',\n  welcomeStartNewSelfAssessment: 'Započnite novi Self-Assessment',\n\n  categoriesPleaseChoose: 'Prvo izaberite kategoriju',\n  categoriesDescription:\n    'HR Here’s a bit more about why and how to choose the categories. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.',\n\n  categoryInProgress: 'Aktivno',\n};\n","import React from 'react';\n\nexport const useToggle = (initialValue: any = false) => {\n  const [value, setValue] = React.useState(initialValue);\n\n  const toggle = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setValue((v: boolean) => !v);\n    },\n    []\n  );\n\n  return [value, toggle];\n};\n","export default __webpack_public_path__ + \"static/media/logo.47f0e218.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.b58e49cc.svg\";","export default __webpack_public_path__ + \"static/media/arrow-left-white.5c0b93db.svg\";","export default __webpack_public_path__ + \"static/media/close.09ddbab6.svg\";","export default __webpack_public_path__ + \"static/media/menu.5261053b.svg\";","export default __webpack_public_path__ + \"static/media/globe.a839b0bc.svg\";","export default __webpack_public_path__ + \"static/media/cc.096670ac.svg\";","export default __webpack_public_path__ + \"static/media/civicus.a7d46946.svg\";","export default __webpack_public_path__ + \"static/media/github.7c8fb24c.svg\";","export default __webpack_public_path__ + \"static/media/goalCard.7debc722.svg\";","export default __webpack_public_path__ + \"static/media/filtersOpen.1b2f3d70.svg\";","export default __webpack_public_path__ + \"static/media/filtersClose.80a06a07.svg\";","export default __webpack_public_path__ + \"static/media/infoLight.4452af5f.svg\";","export default __webpack_public_path__ + \"static/media/infoDark.41eabf55.svg\";","export default __webpack_public_path__ + \"static/media/goalLight.3c42630f.svg\";","export default __webpack_public_path__ + \"static/media/goalActive.b557b40f.svg\";","export default __webpack_public_path__ + \"static/media/star.e6e59824.svg\";","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { decompress } from 'shrink-string';\n\nimport { useToggle } from 'hooks/useToggle';\nimport { ArrowRightIcon } from 'images';\nimport { loadGoals, loadResults } from 'store/results';\nimport { useTranslations } from 'i18n';\n\nconst WelcomeCard = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { t } = useTranslations();\n\n  const [welcomeContentOpen, toggleWelcomeContent] = useToggle(true);\n  const [code, setCode] = useState<string>('');\n\n  const handleDeserialization = async () => {\n    try {\n      const jsonString = await decompress(code.trim());\n      const json = JSON.parse(jsonString);\n      dispatch(loadResults(json.results));\n      dispatch(loadGoals(json.goals));\n      setCode('');\n      history.push('/category');\n    } catch {\n      alert('Error loading saved code');\n    }\n  };\n\n  return (\n    <div className=\"card welcome-card\">\n      <h1>{t('welcomeTitle')}</h1>\n      {welcomeContentOpen && (\n        <>\n          <p style={{ whiteSpace: 'pre-line' }}>{t('welcomeDescription')}</p>\n          <div className=\"d-flex flex-column align-items-center welcome-buttons mt-4\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary welcome-btn\"\n              onClick={() => history.push('/category')}\n            >\n              {t('welcomeStartSelfAssessment')}\n            </button>\n            <p className=\"mb-1 mt-4\">{t('welcomeOr')}</p>\n            <button\n              type=\"button\"\n              className=\"btn btn-transparent\"\n              onClick={toggleWelcomeContent}\n            >\n              {t('welcomePickUpWhereYouLeft')}\n            </button>\n          </div>\n        </>\n      )}\n\n      {!welcomeContentOpen && (\n        <div className=\"d-flex flex-column align-items-center\">\n          <div className=\"form-inline welcome-form\">\n            <div className=\"form-group mr-0 mr-md-3 mb-3 mb-md-0 welcome-form-group\">\n              <label htmlFor=\"inputURL\" className=\"sr-only\">\n                {t('welcomeEnterCode')}\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control welcome-input\"\n                id=\"inputURL\"\n                placeholder={t('welcomeEnterCode')}\n                value={code}\n                onChange={(e) => setCode(e.target.value)}\n              />\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-sm welcome-btn-continue\"\n              onClick={handleDeserialization}\n            >\n              <span>{t('welcomeContinue')}</span>\n              <img className=\"ml-1\" src={ArrowRightIcon} alt=\"Arrow right\" />\n            </button>\n          </div>\n          <p className=\"mb-1 mt-4\">{t('welcomeOr')}</p>\n          <button\n            type=\"button\"\n            className=\"btn btn-transparent\"\n            onClick={toggleWelcomeContent}\n          >\n            {t('welcomeStartNewSelfAssessment')}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WelcomeCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { getResults } from 'store/results';\n\nimport WelcomeCard from './WelcomeCard';\n\nconst WelcomePage = () => {\n  const results = useSelector(getResults);\n\n  if (results.length > 0) {\n    return <Redirect to=\"/category\" />;\n  }\n\n  return (\n    <div className=\"mb-5\">\n      <WelcomeCard />\n    </div>\n  );\n};\n\nexport default WelcomePage;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { useTranslations } from 'i18n';\nimport React from 'react';\n\ntype CategoryProps = {\n  title: string;\n  description: string;\n  status: boolean;\n  onClick(): void;\n};\n\nconst Category = ({ title, description, status, onClick }: CategoryProps) => {\n  const { t } = useTranslations();\n\n  return (\n    <div onClick={onClick} className=\"card card-elevation-xs category-card\">\n      <div className=\"card-header\">{title}</div>\n      <div className=\"card-status\">\n        {status && <div className=\"status\">{t('categoryInProgress')}</div>}\n      </div>\n      <div className=\"card-content\">{description}</div>\n    </div>\n  );\n};\n\nexport default Category;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport { getCategories } from 'store/categories';\nimport { DEFAULT_LANGUAGE, getSelectedLanguage } from 'store/languages';\nimport { getResults } from 'store/results';\n\nimport Category from './Category';\nimport { getStatements } from 'store/statements';\n\ntype CategoriesProps = {\n  showOnlyUnanswered?: boolean;\n};\n\nconst Categories = ({ showOnlyUnanswered }: CategoriesProps) => {\n  const categories = useSelector(getCategories);\n  const selectedLanguage = useSelector(getSelectedLanguage);\n  const results = useSelector(getResults);\n  const statements = useSelector(getStatements);\n  const history = useHistory();\n\n  return (\n    <div className=\"categories\">\n      <div className=\"container\">\n        <div className=\"row categories-row\">\n          {categories.map((cat) => {\n            const categoryResults = results.filter(\n              (r) => r.category === cat.id\n            );\n\n            const categoryStatements = statements.filter(\n              (s) => s.category === cat.id\n            );\n\n            // If one category has all statements answered remove it from the list\n            if (categoryResults.length === categoryStatements.length) {\n              return null;\n            }\n\n            if (showOnlyUnanswered && categoryResults.length > 0) {\n              return null;\n            }\n\n            const categoryData =\n              cat[selectedLanguage.id] || cat[DEFAULT_LANGUAGE];\n\n            return (\n              <div key={cat.id} className=\"col-12 col-md-4\">\n                <Category\n                  title={categoryData.name}\n                  description={categoryData.description}\n                  status={!_.isEmpty(categoryResults)}\n                  onClick={() => history.push(`/statement/${cat.id}`)}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { GoalActiveIcon, GoalLightIcon } from 'images';\nimport { getGoalActive, setGoalActive } from 'store/goals';\nimport { useTranslations } from 'i18n';\n\nconst GoalButtonToggle = () => {\n  const dispatch = useDispatch();\n  const { t } = useTranslations();\n\n  const goalButtonActive = useSelector(getGoalActive);\n  const activeClass = goalButtonActive ? 'is--active' : undefined;\n\n  const buttonClicked = () => {\n    dispatch(setGoalActive(!goalButtonActive));\n  };\n\n  return (\n    <button\n      onClick={buttonClicked}\n      className={`goal-btn-toggle btn-toggle ${activeClass}`}\n    >\n      {!goalButtonActive ? (\n        <>\n          <img src={GoalLightIcon} alt=\"Goals open\" />\n          <div>{t('goalButtonSetGoalPerCategory')}</div>\n        </>\n      ) : (\n        <>\n          <img src={GoalActiveIcon} alt=\"Goals closed\" />\n          <div>{t('goalButtonFinishSettingGoal')}</div>\n        </>\n      )}\n    </button>\n  );\n};\n\nexport default GoalButtonToggle;\n","import { GoalActions } from './types';\n\nexport const setGoalActive = (payload: boolean) => ({\n  type: GoalActions.SET_GOAL_ACTIVE,\n  payload,\n});\n","import { InfoDarkIcon, InfoLightIcon } from 'images';\nimport React from 'react';\n\ntype GoalButtonProps = {\n  title: string;\n  tooltip: string;\n};\n\nconst GoalButton = ({ title, tooltip }: GoalButtonProps) => {\n  return (\n    <button className=\"goal-button\">\n      <div className=\"goal-button-title\">{title}</div>\n\n      <div className=\"goal-button-tooltip\">\n        <img src={InfoLightIcon} alt=\"\" />\n\n        <div className=\"goal-button-tooltip-content\">\n          <img src={InfoDarkIcon} alt=\"\" />\n          <div>{tooltip}</div>\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default GoalButton;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport { Link, useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { GoalCardIcon } from 'images';\nimport {\n  Answer,\n  getMaturityStages,\n  getStatementsAnswered,\n  getStatementsUnaswered,\n} from 'store/statements';\nimport { getSelectedLanguage } from 'store/languages';\nimport {\n  getGoals,\n  getResultsByCategory,\n  removeGoal,\n  setGoal,\n} from 'store/results';\nimport { Category } from 'store/categories';\nimport GoalButtonToggle from 'components/Goals/GoalButtonToggle';\nimport GoalButton from 'components/Goals/GoalButton';\nimport { maturityLevels } from 'data';\nimport { interpolateColor } from 'utils/colors';\nimport { getGoalActive } from 'store/goals';\nimport { useTranslations } from 'i18n';\n\ntype CategoryAnsweredProps = {\n  category: Category;\n  status?: boolean;\n  onCardClicked?(maturityStage: string, category: Category): void;\n  filteredTags?: string[];\n  isFilterable?: boolean;\n};\n\nconst CategoryAnswered = ({\n  category,\n  status = true,\n  onCardClicked = _.noop,\n  filteredTags = [],\n  isFilterable,\n}: CategoryAnsweredProps) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslations();\n  const history = useHistory();\n\n  const maturityStages = useSelector(getMaturityStages);\n  const answeredStatements = useSelector(getStatementsAnswered(category.id));\n  const unansweredStatements = useSelector(getStatementsUnaswered(category.id));\n  const resultsCategory = useSelector(getResultsByCategory(category.id));\n  const language = useSelector(getSelectedLanguage);\n  const settingsGoalActive = useSelector(getGoalActive);\n  const goals = useSelector(getGoals);\n\n  const [filter, setFilter] = useState<string | null>(null);\n\n  const handleCardClicked = (\n    maturityStage: string,\n    clickedCategory: Category\n  ) => {\n    if (isFilterable) {\n      if (filter === maturityStage) {\n        setFilter(null);\n      } else {\n        setFilter(maturityStage);\n      }\n\n      onCardClicked(maturityStage, clickedCategory);\n    } else {\n      history.push(`/category-result/${category.id}`);\n    }\n  };\n\n  return (\n    <div className=\"card card-elevation-xs category-answered\">\n      <Link\n        className=\"category-answered-title\"\n        to={`/category-result/${category.id}`}\n      >\n        <h4>{category[language.id]?.name}</h4>\n        <div className=\"category-answered-status\">\n          {status && <div className=\"status\">{t('categoryInProgress')}</div>}\n        </div>\n      </Link>\n\n      <div className=\"category-answered-goals\">\n        <div className=\"category-answered-goals-button\">\n          <GoalButtonToggle />\n        </div>\n        <div className=\"category-answered-goals-list\">\n          {maturityLevels.map((ml: any) => (\n            <GoalButton\n              key={ml.id}\n              title={ml[language.id]?.name}\n              tooltip={ml[language.id]?.description}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div className=\"category-answered-answers\">\n        {maturityStages.map((mStage, i) => {\n          const maturityAnswered = answeredStatements\n            .filter(\n              (s) =>\n                filteredTags.length === 0 ||\n                _.intersection(s.tags, filteredTags).length > 0\n            )\n            .filter((ma) => ma.maturity_stage === mStage);\n\n          const maturityUnanswered = unansweredStatements\n            .filter(\n              (s) =>\n                filteredTags.length === 0 ||\n                _.intersection(s.tags, filteredTags).length > 0\n            )\n            .filter((mu) => mu.maturity_stage === mStage);\n\n          // Find matching results from statements\n          const totalResults = maturityAnswered.map((ma) => {\n            return resultsCategory.find(\n              (r) => r.statementId === ma.statementId\n            );\n          });\n\n          const doNotApply = totalResults.filter(\n            (tr) => tr?.answerId === Answer.DoesntApply\n          ).length;\n\n          const sumResults = totalResults.reduce((acc, cur) => {\n            if (cur?.answerId === Answer.DoesntApply) {\n              return acc;\n            }\n            return acc + (cur?.answerId || 0);\n          }, 0);\n\n          const gradient =\n            maturityAnswered.length > 0\n              ? sumResults / (maturityAnswered.length * 3)\n              : 0;\n\n          const color = '#' + interpolateColor('FFFFFF', 'FFC434', gradient);\n\n          const isGoalSet = goals.find(\n            (g) => g.categoryId === category.id && g.maturityStage === mStage\n          );\n\n          const isGoalSetOnCategory = goals.find(\n            (g) => g.categoryId === category.id\n          );\n\n          return (\n            <div\n              key={i}\n              className={classNames('answer', {\n                'is--active': isFilterable && filter === mStage,\n                'is--inactive': isFilterable && !!filter && filter !== mStage,\n                'hover--disabled': !isFilterable,\n              })}\n              style={{ backgroundColor: color }}\n              onClick={() => handleCardClicked(mStage, category)}\n            >\n              <div className=\"answer-header\">\n                {settingsGoalActive && !isGoalSetOnCategory && (\n                  <div\n                    className=\"answer-header-content\"\n                    onClick={() => dispatch(setGoal(mStage, category.id))}\n                  >\n                    <span>{t('categorySetAsGoal')}</span>\n                    <img src={GoalCardIcon} alt=\"Set as goal\" />\n                  </div>\n                )}\n                {isGoalSet && (\n                  <div\n                    className=\"answer-header-content-remove\"\n                    onClick={() => dispatch(removeGoal(mStage, category.id))}\n                  >\n                    <span>{t('categoryRemoveGoal')}</span>\n                    <img src={GoalCardIcon} alt=\"Remove as goal\" />\n                  </div>\n                )}\n              </div>\n              <div className=\"answer-content\">\n                <div>\n                  <span>{maturityAnswered.length}</span>/\n                  <span>\n                    {maturityAnswered.length + maturityUnanswered.length}\n                  </span>\n                </div>\n                <label>{t('categoryAnswered')}</label>\n              </div>\n              <div className=\"answer-footer\">{`${doNotApply} do not apply`}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryAnswered;\n","/* eslint-disable */\n// @ts-nocheck\nexport function interpolateColor(c0: string, c1: string, f: number): string {\n  c0 = c0.match(/.{1,2}/g).map((oct) => parseInt(oct, 16) * (1 - f));\n  c1 = c1.match(/.{1,2}/g).map((oct) => parseInt(oct, 16) * f);\n  const ci = [0, 1, 2].map((i) => Math.min(Math.round(c0[i] + c1[i]), 255));\n  return ci\n    .reduce((a, v) => (a << 8) + v, 0)\n    .toString(16)\n    .padStart(6, '0');\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { useToggle } from 'hooks/useToggle';\nimport { FiltersCloseIcon, FiltersOpenIcon } from 'images';\nimport { getSelectedLanguage } from 'store/languages';\nimport { tags as allTags } from 'data';\nimport { Statement } from 'store/statements';\nimport _ from 'lodash';\nimport { useTranslations } from 'i18n';\n\ninterface FilterProps {\n  statements?: Statement[];\n  onChange?: (selectedTags: string[]) => void;\n}\n\nconst Filters = ({ onChange, statements = [] }: FilterProps) => {\n  const selectedLanguage = useSelector(getSelectedLanguage);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  const { t } = useTranslations();\n\n  const [filtersOpen, toggleFilters] = useToggle(false);\n  const activeClass = filtersOpen ? 'is--active' : undefined;\n\n  const statementTags = _.uniq(\n    statements\n      .filter((s) => !!s.tags)\n      .reduce((acc: string[], cur) => [...acc, ...cur.tags], [])\n  );\n\n  const availableTags = allTags.filter(\n    (tag: any) =>\n      !statements ||\n      statements.length === 0 ||\n      statementTags.find((tt) => tt === tag.id)\n  );\n\n  const toggleTag = (id: string) => {\n    const newTags = !selectedTags.find((tag) => tag === id)\n      ? [...selectedTags, id]\n      : selectedTags.filter((tag) => tag !== id);\n\n    setSelectedTags(newTags);\n\n    if (onChange) {\n      onChange(newTags);\n    }\n  };\n\n  return (\n    <div className=\"filters\">\n      <div className=\"filters-header\">\n        <button\n          onClick={toggleFilters}\n          className={`filters-btn btn-toggle ${activeClass}`}\n        >\n          {!filtersOpen ? (\n            <>\n              <img src={FiltersOpenIcon} alt=\"Filters open\" />\n              <div>{t('filtersShowFiltersByArea')}</div>\n            </>\n          ) : (\n            <>\n              <img src={FiltersCloseIcon} alt=\"Filters closed\" />\n              <div>{t('filtersRemoveFiltersByArea')}</div>\n            </>\n          )}\n        </button>\n        <div className=\"filters-header-line\" />\n      </div>\n      {filtersOpen && (\n        <div className={`filters-content ${activeClass}`}>\n          {availableTags.map((tag: any) => (\n            <button\n              key={tag.id}\n              className={classNames('btn-toggle', {\n                'is--active': selectedTags.indexOf(tag.id) > -1,\n              })}\n              onClick={() => toggleTag(tag.id)}\n            >\n              {tag[selectedLanguage.id]?.name}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filters;\n","import React, { memo, useEffect, useState } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { useSelector } from 'react-redux';\nimport { compress } from 'shrink-string';\nimport { useTranslations } from 'i18n';\n\nimport { getGoals, getResults } from 'store/results';\n\ntype ModalProps = {\n  open: boolean;\n  setOpen: any;\n};\n\nconst SaveModal = ({ open, setOpen }: ModalProps) => {\n  const results = useSelector(getResults);\n  const goals = useSelector(getGoals);\n  const { t } = useTranslations();\n\n  const [clipboard, setClipboard] = useState({\n    value: '',\n    copied: false,\n  });\n\n  useEffect(() => {\n    const generateCode = async () => {\n      const json = JSON.stringify({ results, goals });\n      const base64 = await compress(json);\n\n      setClipboard({ value: base64, copied: false });\n    };\n    generateCode();\n  }, [results, goals]);\n\n  const activeClass = open ? 'is--active' : undefined;\n\n  return (\n    <div className={`modal-overlay ${activeClass}`}>\n      <div className=\"card modal-card\">\n        <h1>{t('saveModalSaveYourProgress')}</h1>\n        <p>{t('saveModalCopyThisCode')}</p>\n\n        <div className=\"modal-form d-flex flex-column justify-content-center\">\n          <div className=\"input-group mr-0 mr-md-3 mb-3 mb-md-0 modal-input-group\">\n            <label htmlFor=\"inputURL\" className=\"sr-only\">\n              {t('saveModalCode')}\n            </label>\n            <input\n              type=\"text\"\n              className=\"form-control modal-input\"\n              id=\"inputURL\"\n              placeholder={t('saveModalCode')}\n              value={clipboard.value}\n              onChange={({ target: { value } }) =>\n                setClipboard({ value, copied: false })\n              }\n            />\n            <div className=\"input-group-append\">\n              <CopyToClipboard\n                text={clipboard.value}\n                onCopy={() =>\n                  setClipboard((prevState) => ({ ...prevState, copied: true }))\n                }\n              >\n                <span className=\"btn btn-outline-secondary btn-copy-to-clipboard\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\" />{' '}\n                    <rect x=\"8\" y=\"2\" width=\"8\" height=\"4\" rx=\"1\" ry=\"1\" />\n                  </svg>\n                </span>\n              </CopyToClipboard>\n            </div>\n          </div>\n\n          {clipboard.copied ? (\n            <div className=\"mb-2 mt-1 text-center\">\n              <span>{t('saveModalCopied')}</span>\n            </div>\n          ) : null}\n\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-sm modal-btn-done mt-4\"\n            onClick={setOpen}\n          >\n            <span>{t('saveModalDone')}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SaveModal);\n","import React, { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\n\nimport { useTranslations } from 'i18n';\nimport { getResults } from 'store/results';\nimport { getCategories } from 'store/categories';\nimport Categories from 'components/Categories/Categories';\nimport CategoryAnswered from 'components/Categories/CategoryAnswered';\nimport Filters from 'components/Categories/Filters';\nimport GoalButtonToggle from 'components/Goals/GoalButtonToggle';\nimport GoalButton from 'components/Goals/GoalButton';\nimport { maturityLevels } from 'data';\nimport { getSelectedLanguage } from 'store/languages';\nimport { StarIcon } from 'images';\nimport SaveModal from 'components/SaveModal/SaveModal';\nimport { useToggle } from 'hooks/useToggle';\nimport { getStatements } from 'store/statements';\n\nconst Categorypage = () => {\n  const { t } = useTranslations();\n  const results = useSelector(getResults);\n  const categories = useSelector(getCategories);\n  const language = useSelector(getSelectedLanguage);\n  const statements = useSelector(getStatements);\n\n  const showResults = !_.isEmpty(results);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  const [modalVisbility, toggleModal] = useToggle(false);\n\n  const { title, description } = useMemo(() => {\n    if (showResults) {\n      return {\n        title: t('categoriesChooseNext'),\n        description: t('categoriesDescriptionSecond'),\n      };\n    }\n\n    return {\n      title: t('categoriesPleaseChoose'),\n      description: t('categoriesDescriptionFirst'),\n    };\n  }, [showResults, t]);\n\n  return (\n    <div className=\"mb-5\">\n      {showResults && (\n        <div className=\"category-hero\">\n          <h1>{t('categoriesStateOfDiversity')}</h1>\n\n          <button\n            className=\"btn btn-sm btn-primary category-hero-btn\"\n            onClick={toggleModal}\n          >\n            <img\n              src={StarIcon}\n              alt=\"\"\n              style={{ position: 'relative', top: -1 }}\n            />\n            <span className=\"ml-2\">{t('categoriesSave')}</span>\n          </button>\n        </div>\n      )}\n      {showResults && (\n        <>\n          <Filters onChange={(tags) => setSelectedTags(tags)} />\n          <div className=\"goals\">\n            <div className=\"goals-left\">\n              <GoalButtonToggle />\n            </div>\n            <div className=\"goals-list\">\n              {maturityLevels.map((ml: any) => (\n                <GoalButton\n                  key={ml.id}\n                  title={ml[language.id]?.name}\n                  tooltip={ml[language.id]?.description}\n                />\n              ))}\n            </div>\n          </div>\n\n          {categories.map((cat, i) => {\n            const categoryResults = results.filter(\n              (r) => r.category === cat.id\n            );\n\n            const noResults = _.isEmpty(categoryResults);\n\n            // don't show categories with no results\n            if (noResults) {\n              return null;\n            }\n\n            const allAnswered =\n              categoryResults.length ===\n              statements.filter((s) => s.category === cat.id).length;\n\n            return (\n              <CategoryAnswered\n                key={i}\n                category={cat}\n                status={!noResults && !allAnswered}\n                filteredTags={selectedTags}\n              />\n            );\n          })}\n        </>\n      )}\n\n      {showResults && (\n        <div className=\"category-mobile-save\">\n          <button\n            className=\"btn btn-sm btn-primary category-hero-btn\"\n            onClick={toggleModal}\n          >\n            <img\n              src={StarIcon}\n              alt=\"\"\n              style={{ position: 'relative', top: -1 }}\n            />\n            <span className=\"ml-2\">{t('categoriesSave')}</span>\n          </button>\n        </div>\n      )}\n\n      {!showResults ? (\n        <div className=\"category-page-content\">\n          <header className=\"content-header text-md-center\">\n            <h1>{title}</h1>\n            <p>{description}</p>\n          </header>\n        </div>\n      ) : (\n        <div className=\"category-page-content space-top\">\n          <header className=\"content-header text-md-center\">\n            <h3>{title}</h3>\n            <p>{description}</p>\n          </header>\n        </div>\n      )}\n\n      <Categories showOnlyUnanswered={true} />\n\n      <SaveModal open={modalVisbility} setOpen={toggleModal} />\n    </div>\n  );\n};\n\nexport default Categorypage;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { DEFAULT_LANGUAGE, getSelectedLanguage } from 'store/languages';\nimport { Answer, Statement } from 'store/statements';\nimport { Result, setResult } from 'store/results';\nimport { useTranslations } from 'i18n';\n\ntype StatementProps = {\n  statement?: Statement;\n  answered?: Answer;\n};\n\nconst StatementCmp = ({ statement, answered }: StatementProps) => {\n  const dispatch = useDispatch();\n  const language = useSelector(getSelectedLanguage);\n  const { t } = useTranslations();\n\n  const handleAnswer = (answerType: Answer) => {\n    if (!!statement && !answered) {\n      const result: Result = {\n        statementId: statement.statementId,\n        answerId: answerType,\n        category: statement.category,\n      };\n      dispatch(setResult(result));\n    }\n  };\n\n  return (\n    <div className=\"card question-card\">\n      <div className=\"question-card-content\">\n        <p>\n          {statement?.statement[language.id] ||\n            statement?.statement[DEFAULT_LANGUAGE]}\n        </p>\n      </div>\n      <div className=\"question-card-label\">\n        {t('statementsHowMuchDoesThis')}\n      </div>\n      <div className=\"question-card-buttons\">\n        <button\n          className={classNames('btn btn-1', {\n            active: answered === Answer.NotAtAll,\n          })}\n          disabled={answered != null ? true : undefined}\n          onClick={() => handleAnswer(Answer.NotAtAll)}\n        >\n          {t('statementsNotAtAll')}\n        </button>\n        <button\n          className={classNames('btn btn-2', {\n            active: answered === Answer.Somewhat,\n          })}\n          disabled={answered != null ? true : undefined}\n          onClick={() => handleAnswer(Answer.Somewhat)}\n        >\n          {t('statementsSomewhat')}\n        </button>\n        <button\n          className={classNames('btn btn-3', {\n            active: answered === Answer.VeryMuch,\n          })}\n          disabled={answered != null ? true : undefined}\n          onClick={() => handleAnswer(Answer.VeryMuch)}\n        >\n          {t('statementsVeryMuch')}\n        </button>\n        <div className=\"separator\" />\n        <button\n          className={classNames('btn btn-4', {\n            active: answered === Answer.DoesntApply,\n          })}\n          disabled={answered != null ? true : undefined}\n          onClick={() => handleAnswer(Answer.DoesntApply)}\n        >\n          {t('statementsDoesNotApply')}\n        </button>\n      </div>\n      <ul className=\"question-card-tags\">\n        {statement?.tags &&\n          statement?.tags.map((tag: string, index: number) => (\n            <li key={index}>{tag}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default memo(StatementCmp);\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport _ from 'lodash';\n\nimport CategoryAnswered from 'components/Categories/CategoryAnswered';\nimport Filters from 'components/Categories/Filters';\nimport GoalButton from 'components/Goals/GoalButton';\nimport GoalButtonToggle from 'components/Goals/GoalButtonToggle';\nimport StatementCmp from 'components/Statements/Statement';\nimport { maturityLevels } from 'data';\nimport {\n  getStatementsAnswered,\n  getStatementsUnaswered,\n} from 'store/statements';\nimport { ArrowLeftWhiteIcon } from 'images';\nimport { getCategoryById } from 'store/categories';\nimport { DEFAULT_LANGUAGE, getSelectedLanguage } from 'store/languages';\nimport { getResultsByCategory } from 'store/results';\nimport { useTranslations } from 'i18n';\n\nconst CategoryResultPage = () => {\n  const history = useHistory();\n\n  const { categoryId } = useParams<{ categoryId: string }>();\n  const category = useSelector(getCategoryById(categoryId));\n  const selectedLanguage = useSelector(getSelectedLanguage);\n  const answeredStatements = useSelector(getStatementsAnswered(categoryId));\n  const unansweredStatements = useSelector(getStatementsUnaswered(categoryId));\n  const results = useSelector(getResultsByCategory(categoryId));\n  const { t } = useTranslations();\n\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  const [maturityStage, setMaturityStage] = useState<string | null>(null);\n  const [resultsVisible, setResultsVisible] = useState<boolean>(false);\n\n  const handleMaturitySelected = (selectedMaturityStage: string) => {\n    if (maturityStage === selectedMaturityStage) {\n      setMaturityStage(null);\n    } else {\n      setMaturityStage(selectedMaturityStage);\n    }\n\n    setResultsVisible(true);\n  };\n\n  const selectedMaturityStageName = maturityStage\n    ? maturityLevels.find((ml: any) => ml.id === maturityStage)[\n        selectedLanguage.id\n      ]?.name\n    : null;\n\n  if (!category) {\n    return null;\n  }\n\n  const filteredAnsweredStatements = answeredStatements\n    .filter(\n      (s) =>\n        selectedTags.length === 0 ||\n        _.intersection(s.tags, selectedTags).length > 0\n    )\n    .filter((s) => !maturityStage || s.maturity_stage === maturityStage);\n\n  const filteredUnasweredStatements = unansweredStatements\n    .filter(\n      (s) =>\n        selectedTags.length === 0 ||\n        _.intersection(s.tags, selectedTags).length > 0\n    )\n    .filter((s) => !maturityStage || s.maturity_stage === maturityStage);\n\n  const categoryData =\n    category[selectedLanguage.id] || category[DEFAULT_LANGUAGE];\n\n  return (\n    <div className=\"mb-5\">\n      <header className=\"questions-header category-results-header\">\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline btn-sm\"\n            onClick={() => history.push('/category')}\n          >\n            <img className=\"mr-1\" src={ArrowLeftWhiteIcon} alt=\"Arrow right\" />\n            <span>{t('categoryBack')}</span>\n          </button>\n        </div>\n        <div className=\"questions-header-content\">\n          <div className=\"questions-header-card-title\">{categoryData.name}</div>\n          <div className=\"questions-header-card-description\">\n            {categoryData.description}\n          </div>\n        </div>\n        <div />\n      </header>\n\n      <Filters\n        statements={[...answeredStatements, ...unansweredStatements]}\n        onChange={(tags) => setSelectedTags(tags)}\n      />\n\n      <div className=\"goals\">\n        <div className=\"goals-left\">\n          <GoalButtonToggle />\n        </div>\n        <div className=\"goals-list\">\n          {maturityLevels.map((ml: any) => (\n            <GoalButton\n              key={ml.id}\n              title={ml[selectedLanguage.id]?.name}\n              tooltip={ml[selectedLanguage.id]?.description}\n            />\n          ))}\n        </div>\n      </div>\n\n      <CategoryAnswered\n        category={category}\n        onCardClicked={handleMaturitySelected}\n        isFilterable={true}\n      />\n\n      {!resultsVisible && (\n        <div className=\"category-results-helperText\">\n          {t('categoryClickOnMaturityLevel')}\n        </div>\n      )}\n\n      {resultsVisible && (\n        <>\n          <div className=\"category-results-content\">\n            {filteredUnasweredStatements.length > 0 && (\n              <header className=\"content-header text-md-center\">\n                <h3>{`Unanswered statements${\n                  selectedMaturityStageName\n                    ? ` in ${selectedMaturityStageName}`\n                    : ''\n                }`}</h3>\n              </header>\n            )}\n\n            {filteredUnasweredStatements.map((statement) => (\n              <StatementCmp key={statement.statementId} statement={statement} />\n            ))}\n\n            {filteredAnsweredStatements.length > 0 && (\n              <header className=\"content-header text-md-center\">\n                <h3>{`Finished statements${\n                  selectedMaturityStageName\n                    ? ` in ${selectedMaturityStageName}`\n                    : ''\n                }`}</h3>\n              </header>\n            )}\n\n            {filteredAnsweredStatements.map((statement) => (\n              <StatementCmp\n                key={statement.statementId}\n                statement={statement}\n                answered={\n                  results.filter(\n                    (r) => r.statementId === statement.statementId\n                  )[0]?.answerId\n                }\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CategoryResultPage;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { useTranslations } from 'i18n';\n\ntype ProgressProps = {\n  progressTotal?: number;\n  progressCurrent?: number;\n  progressRequired?: number;\n};\n\nconst Progress = ({\n  progressCurrent = 8,\n  progressRequired = 11,\n  progressTotal = 27,\n}: ProgressProps) => {\n  // This is animated with CSS\n  const percentage = (progressCurrent / progressTotal) * 100;\n  const requiredPercentage = (progressRequired / progressTotal) * 100;\n  const { t } = useTranslations();\n\n  return (\n    <div className=\"progressBox\">\n      <div className=\"progressBox-bar\">\n        <div\n          className=\"progressBox-bar-progress\"\n          style={{\n            clipPath: `polygon(0 0, ${percentage}% 0, ${percentage}% 100%, 0% 100%)`,\n          }}\n        />\n        <div\n          className=\"progressBox-bar-progressRequired\"\n          style={{ left: `${requiredPercentage}%` }}\n        >\n          <svg\n            width=\"3\"\n            height=\"23\"\n            viewBox=\"0 0 3 23\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <line\n              x1=\"1.5\"\n              y1=\"4.37114e-08\"\n              x2=\"1.5\"\n              y2=\"23\"\n              stroke=\"white\"\n              strokeWidth=\"2\"\n              strokeDasharray=\"2 2\"\n            />\n          </svg>\n        </div>\n      </div>\n      <div className=\"progressBox-content\">\n        <div className=\"progressBox-content-total\">\n          {t('statementsProgress')} <span>{progressCurrent}</span>/\n          <span>{progressTotal}</span>\n        </div>\n        <div className=\"progressBox-content-required\">\n          {t('statementsRequired')} <span>{progressRequired}</span>/\n          <span>{progressTotal}</span>\n        </div>\n        <div className=\"progressBox-content-info\">\n          {t('statementsAssessment')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Progress;\n","import React, { useEffect } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { ArrowLeftWhiteIcon, ArrowRightIcon } from 'images';\nimport { getRandomStatement, getStatementsByCategory } from 'store/statements';\nimport StatementCmp from 'components/Statements/Statement';\nimport Progress from 'components/Statements/Progress';\nimport { getResultsByCategory } from 'store/results';\nimport { getCategoryById } from 'store/categories';\nimport { getSelectedLanguage } from 'store/languages';\nimport { useTranslations } from 'i18n';\n\nconst StatementPage = () => {\n  const { categoryId } = useParams<{ categoryId: string }>();\n  const history = useHistory();\n  const { t } = useTranslations();\n\n  const language = useSelector(getSelectedLanguage);\n  const category = useSelector(getCategoryById(categoryId));\n  const statements = useSelector(getStatementsByCategory(categoryId));\n  const randomStatement = useSelector(getRandomStatement(categoryId));\n  const results = useSelector(getResultsByCategory(categoryId));\n\n  useEffect(() => {\n    if (statements.length && statements.length === results.length) {\n      history.push('/category');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [results]);\n\n  return (\n    <div className=\"mb-5\">\n      <div className=\"questions\">\n        <header className=\"questions-header\">\n          <div>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline btn-sm\"\n              onClick={() => history.push('/category')}\n            >\n              <img\n                className=\"mr-1\"\n                src={ArrowLeftWhiteIcon}\n                alt=\"Arrow right\"\n              />\n              <span>{t('statementPageBack')}</span>\n            </button>\n          </div>\n          <div className=\"questions-header-content\">\n            <div className=\"questions-header-card-title\">\n              {category![language.id]?.name}\n            </div>\n            <div className=\"questions-header-card-description\">\n              {category![language.id]?.description}\n            </div>\n          </div>\n          <div>\n            <Link to={`/category`} className=\"btn btn-primary btn-sm\">\n              <span>{t('statementShowResults')}</span>\n              <img className=\"ml-1\" src={ArrowRightIcon} alt=\"Arrow right\" />\n            </Link>\n          </div>\n        </header>\n        <StatementCmp statement={randomStatement} />\n        <Progress\n          progressCurrent={results.length}\n          progressRequired={1}\n          progressTotal={statements.length}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default StatementPage;\n","import React from 'react';\nimport { useTranslations } from 'i18n';\n\nconst NotFound = () => {\n  const { t } = useTranslations();\n\n  return <h1>{t('notFound')}</h1>;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { useTranslations } from 'i18n';\n\nconst AboutPage = () => {\n  const { t } = useTranslations();\n\n  return (\n    <div className=\"card page-card\">\n      <h3>{t('aboutSelfDiagnosticTool')}</h3>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: t('aboutParagraphOne'),\n        }}\n      />\n      <p\n        dangerouslySetInnerHTML={{\n          __html: t('aboutParagraphTwo'),\n        }}\n      />\n      <h3>{t('aboutWhatHappensNext')}</h3>\n      <p>{t('aboutParagraphThree')}</p>\n      <p>{t('aboutParagraphFour')}</p>\n      <p>{t('aboutParagraphFive')}</p>\n\n      <h3>{t('aboutAcknowledgments')}</h3>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: t('aboutCreativeConsultancyTeams'),\n        }}\n      />\n      <p\n        dangerouslySetInnerHTML={{\n          __html: t('aboutSensemakingLab'),\n        }}\n      />\n      <p\n        dangerouslySetInnerHTML={{\n          __html: t('aboutCIVICUSSupportTeam'),\n        }}\n      />\n      <p\n        dangerouslySetInnerHTML={{\n          __html: t('aboutDIGNAAdvisoryGroupMembers'),\n        }}\n      />\n      <p>{t('aboutSpecialThanks')}</p>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: t('aboutSpecialAppreciation'),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\n\nimport { resources, categories } from 'data';\nimport { Category } from 'store/categories/types';\n\nconst ResourcesPage = () => {\n  const types = [\n    'Articles, talks & case studies',\n    'Tools and resource libraries',\n  ];\n\n  const printCategories = [\n    'General Resources',\n    ...categories.map((c: Category) => c.en.name),\n  ];\n\n  const renderAuthorYear = (author: string, year: string) => {\n    if (!!author && !!year) {\n      return `(${author}, ${year})`;\n    } else if (!!author || !!year) {\n      return `(${author || year})`;\n    } else {\n      return '';\n    }\n  };\n\n  const renderCategoryType = (category: string, type: string) => {\n    const ctResources = resources.filter(\n      (r: any) => r.category === category && r.type === type\n    );\n\n    if (ctResources.length === 0) {\n      return null;\n    }\n\n    return (\n      <div>\n        <h3>{type}</h3>\n\n        {ctResources.map((ctr: any) => (\n          <p key={ctr.title}>\n            <strong>{ctr.title}</strong>\n            {ctr.publication ? ', ' + ctr.publication : ''}{' '}\n            {renderAuthorYear(ctr.author, ctr.year)}\n            <br />\n            <small>\n              <a href={ctr.url}>{ctr.url}</a>\n            </small>\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"card page-card\">\n      <h1>Resources</h1>\n\n      {printCategories.map((c) => (\n        <div key={c}>\n          <h2>{c}</h2>\n          {types.map((t) => renderCategoryType(c, t))}\n          <br />\n        </div>\n      ))}\n\n      {/* <p\n        dangerouslySetInnerHTML={{\n          __html: t('ResourcesCIVICUSSupportTeam'),\n        }}\n      /> */}\n    </div>\n  );\n};\n\nexport default ResourcesPage;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { GlobeIcon } from 'images';\nimport {\n  getLanguages,\n  getSelectedLanguage,\n  Language,\n  setSelectedLanguage,\n} from 'store/languages';\n\nconst LanguageDropdown = () => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  const dispatch = useDispatch();\n  const languages = useSelector(getLanguages);\n  const selectedLanguage = useSelector(getSelectedLanguage);\n\n  const languageClicked = (language: Language) => (\n    ev: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    ev.preventDefault();\n    dispatch(setSelectedLanguage(language));\n    setShowMenu(false);\n  };\n\n  return (\n    <div className=\"language\">\n      <div\n        className={classNames('language-dropdown dropdown', {\n          hidden: showMenu,\n        })}\n      >\n        <button\n          className=\"btn btn-sm dropdown-toggle\"\n          type=\"button\"\n          data-toggle=\"dropdown\"\n          onClick={() => setShowMenu(!showMenu)}\n        >\n          <img src={GlobeIcon} alt=\"Choose language\" />\n          <span>{selectedLanguage.description}</span>\n        </button>\n      </div>\n      <div className={classNames('dropdown-menu', { show: showMenu })}>\n        {languages.map((lang, index) => {\n          return (\n            <a\n              key={index}\n              className={classNames('dropdown-item', {\n                active: lang.id === selectedLanguage.id,\n              })}\n              href=\"#\"\n              onClick={languageClicked(lang)}\n            >\n              {lang.description}\n            </a>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default LanguageDropdown;\n","import React from 'react';\nimport { CivicusIcon, CreativeCommonsIcon, GitHubIcon } from 'images';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-logos\">\n        <a href=\"https://creativecommons.org\">\n          <img src={CreativeCommonsIcon} alt=\"Creative Commons\" />\n        </a>\n        <a href=\"https://www.IcCivicusIcon.org\">\n          <img src={CivicusIcon} alt=\"Civicus\" width=\"80px\" height=\"80px\" />\n        </a>\n        <a href=\"https://github.com\">\n          <img src={GitHubIcon} alt=\"GitHub\" />\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { useTranslations } from 'i18n';\nimport { reset } from 'store/results';\n\ntype ModalProps = {\n  open: boolean;\n  setOpen: any;\n};\n\nconst ResetModal = ({ open, setOpen }: ModalProps) => {\n  const { t } = useTranslations();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleReset = () => {\n    dispatch(reset());\n    setOpen();\n    history.push('/');\n  };\n\n  const activeClass = open ? 'is--active' : undefined;\n\n  return (\n    <div className={`modal-overlay ${activeClass}`}>\n      <div className=\"card modal-card\">\n        <h1>{t('resetModalRestartAssessment')}</h1>\n        <p>\n          <strong>{t('resetModalTitle')}</strong>\n        </p>\n        <p>{t('resetModalSubtitle')}</p>\n        <div className=\"modal-form d-flex flex-row justify-content-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-sm modal-btn-done mt-4\"\n            onClick={setOpen}\n          >\n            <span>{t('resetModalCancel')}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-sm modal-btn-done mt-4\"\n            onClick={handleReset}\n          >\n            <span>{t('resetModalConfirm')}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ResetModal);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslations } from 'i18n';\n\nimport { CloseIcon, GlobeIcon, Logo, MenuIcon } from 'images';\nimport { useToggle } from 'hooks/useToggle';\nimport { LanguageDropdown } from 'components/LanguageDropdown';\nimport Footer from 'components//Footer/Footer';\n\nimport {\n  getLanguages,\n  getSelectedLanguage,\n  Language,\n  setSelectedLanguage,\n} from 'store/languages';\nimport classNames from 'classnames';\nimport ResetModal from 'components/ResetModal/ResetModal';\n\nconst Navigation = () => {\n  const history = useHistory();\n  const [mobileMenuOpen, toggleMobileMenu] = useToggle(false);\n  const [modalVisbility, toggleModal] = useToggle(false);\n  const { t } = useTranslations();\n\n  const dispatch = useDispatch();\n  const languages = useSelector(getLanguages);\n  const selectedLanguage = useSelector(getSelectedLanguage);\n\n  const languageClicked = (language: Language) => (\n    ev: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    ev.preventDefault();\n    dispatch(setSelectedLanguage(language));\n  };\n\n  const logoClicked = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    history.push('/');\n  };\n\n  const handleRestart = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    toggleModal();\n  };\n\n  mobileMenuOpen\n    ? document.body.classList.add('mobile-menu-open')\n    : document.body.classList.remove('mobile-menu-open');\n\n  return (\n    <>\n      <header className=\"navigation\">\n        <div className=\"navigation-mobile\">\n          {!mobileMenuOpen && (\n            <button\n              onClick={toggleMobileMenu}\n              className=\"navigation-menu navigation-button\"\n            >\n              <img src={MenuIcon} alt=\"Mobile menu\" />\n            </button>\n          )}\n          {mobileMenuOpen && (\n            <button\n              onClick={toggleMobileMenu}\n              className=\"navigation-close navigation-button\"\n            >\n              <img src={CloseIcon} alt=\"Mobile menu\" />\n            </button>\n          )}\n          <img\n            src={Logo}\n            alt=\"Logo\"\n            height=\"70px\"\n            className=\"navigation-mobile-logo\"\n          />\n          <div className=\"navigation-mobile-spacer\" />\n        </div>\n\n        <div className=\"navigation-desktop\">\n          <div className=\"navigation-desktop__left\">\n            <a href=\"#\" onClick={logoClicked}>\n              <img src={Logo} alt=\"Logo\" className=\"navigation-desktop-logo\" />\n            </a>\n            <ul className=\"navigation-desktop__navigation\">\n              <li className=\"active\">\n                <Link to={`/about`} title=\"About\">\n                  {t('navigationAbout')}\n                </Link>\n              </li>\n              <li className=\"active\">\n                <Link to={`/resources`} title=\"Resources\">\n                  {t('navigationResources')}\n                </Link>\n              </li>\n              <li className=\"active\">\n                <a href=\"#\" onClick={handleRestart}>\n                  {t('navigationRestartAssessment')}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <LanguageDropdown />\n\n        {mobileMenuOpen && (\n          <div className=\"mobile-menu\">\n            <ul className=\"mobile-menu__navigation\">\n              <li className=\"active\">\n                <Link to={`/about`} title=\"About\">\n                  {t('navigationAbout')}\n                </Link>\n              </li>\n              <li className=\"active\">\n                <Link to={`/resources`} title=\"Resources\">\n                  {t('navigationResources')}\n                </Link>\n              </li>\n              <li className=\"active\">\n                <a href=\"#\" onClick={handleRestart}>\n                  {t('navigationRestartAssessment')}\n                </a>\n              </li>\n            </ul>\n\n            <div className=\"d-flex flex-column align-items-center\">\n              <div className=\"mobile-menu__language\">\n                <img src={GlobeIcon} alt=\"Choose language\" />\n                <b>{t('navigationLanguages')}</b>\n              </div>\n              <ul className=\"mobile-menu__navigation language-picker\">\n                {languages.map((lang, index) => {\n                  return (\n                    <li key={index}>\n                      <a\n                        href=\"#\"\n                        className={classNames({\n                          active: lang.id === selectedLanguage.id,\n                        })}\n                        onClick={languageClicked(lang)}\n                      >\n                        {lang.description}\n                      </a>\n                    </li>\n                  );\n                })}\n              </ul>\n              <Footer />\n            </div>\n          </div>\n        )}\n      </header>\n\n      <ResetModal open={modalVisbility} setOpen={toggleModal} />\n    </>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Navigation from 'components/Navigation/Navigation';\nimport Footer from 'components/Footer/Footer';\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n}\n\nconst MainLayout = ({ children }: MainLayoutProps) => {\n  return (\n    <div className=\"app\">\n      <Navigation />\n      <main className=\"content\">{children}</main>\n      <Footer />\n      <div className=\"app-background\" />\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { IntlProvider } from 'react-intl';\n\nimport { categories, languages, statements } from 'data';\nimport { translations } from 'i18n';\n\nimport { WelcomePage } from 'pages/WelcomePage';\nimport { CategoryPage } from 'pages/CategoryPage';\nimport { CategoryResultPage } from 'pages/CategoryResultPage';\nimport { StatementPage } from 'pages/StatementPage';\nimport { NotFound } from 'pages/NotFound';\nimport { AboutPage } from 'pages/AboutPage';\nimport { ResourcesPage } from 'pages/ResourcesPage';\n\nimport { setCategories } from 'store/categories';\nimport { setLanguages, getSelectedLanguage } from 'store/languages';\nimport { setStatements } from 'store/statements';\n\nimport './styles/bootstrap.min.css';\nimport './App.scss';\nimport MainLayout from './MainLayout';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const selectedLanguage = useSelector(getSelectedLanguage);\n\n  useEffect(() => {\n    dispatch(setCategories(categories));\n    dispatch(setLanguages(languages));\n    dispatch(setStatements(statements));\n  }, [dispatch]);\n\n  return (\n    <IntlProvider\n      locale={selectedLanguage.id}\n      // TODO: Luka fix this :)\n      // @ts-ignore\n      messages={translations[selectedLanguage.id] as any}\n    >\n      <MainLayout>\n        <Switch>\n          <Route path={'/'} exact component={WelcomePage} />\n          <Route path={'/about'} exact component={AboutPage} />\n          <Route path={'/resources'} exact component={ResourcesPage} />\n          <Route path={'/category'} exact component={CategoryPage} />\n          <Route\n            path={'/category-result/:categoryId'}\n            exact\n            component={CategoryResultPage}\n          />\n          <Route\n            path={'/statement/:categoryId'}\n            exact\n            component={StatementPage}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    </IntlProvider>\n  );\n}\n\nexport default App;\n","import { CategoryActions, CategoryState } from './types';\n\nexport const setCategories = (payload: CategoryState) => ({\n  type: CategoryActions.SET_CATEGORIES,\n  payload,\n});\n","import { Statement, StatementActions } from './types';\n\nexport const setStatements = (payload: Statement[]) => ({\n  type: StatementActions.SET_STATEMENTS,\n  payload,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nimport { store, persistor } from './store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}